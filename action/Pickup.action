# An action for picking up an object

# The name of the object to pick up (as known in the planning scene)
string target_name

# The diff to consider for the planning scene (optional)
PlanningScene planning_scene_diff

# which group should be used to plan for pickup
string group_name

# which end-effector to be used for pickup (ideally descending from the group above)
string end_effector

# If this flag is set to true, the action
# returns an executable plan in the response but does not attempt execution  
bool plan_only

# a list of possible grasps to be used. At least one grasp must be filled in
manipulation_msgs/Grasp[] possible_grasps

# the name that the support surface (e.g. table) has in the collision map
# can be left empty if no name is available
string collision_support_surface_name

# whether collisions between the gripper and the support surface should be acceptable
# during move from pre-grasp to grasp and during lift. Collisions when moving to the
# pre-grasp location are still not allowed even if this is set to true.
bool allow_gripper_support_collision

# whether reactive grasp execution using tactile sensors should be used
bool use_reactive_execution

# whether reactive object lifting based on tactile sensors should be used
bool use_reactive_lift

# Optional constraints to be imposed on every point in the motion plan
Constraints path_constraints

# an optional list of obstacles that we have semantic information about
# and that can be touched/pushed/moved in the course of grasping
string[] allowed_touch_objects

# the maximum contact force to use while grasping (<=0 to disable)
float32 max_contact_force

# The maximum amount of time the motion planner is allowed to plan for
duration allowed_planning_time

---

# The overall result of the pickup attempt
MoveItErrorCodes manipulation_result

# The full starting state of the robot at the start of the trajectory
moveit_msgs/RobotState trajectory_start

# The trajectory that moved group produced for execution
moveit_msgs/RobotTrajectory[] trajectory_stages

string[] trajectory_descriptions

# The performed grasp, if attempt was successful
string grasp_id

# the complete list of attempted grasp, in the order in which they have been attempted
# the successful one should be the last one in this list
string[] attempted_grasp_ids

# the outcomes of the attempted grasps, in the same order as attempted_grasps
manipulation_msgs/GraspResult[] attempted_grasp_results

---

# The internal state that the pickup action currently is in
string state
