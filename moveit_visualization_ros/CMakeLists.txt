cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
find_package(Eigen REQUIRED)
include_directories(${EIGEN_INCLUDE_DIRS})

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
#rosbuild_genmsg()
#uncomment if you have defined services
#rosbuild_gensrv()

#common commands for building c++ executables and libraries
rosbuild_add_library(${PROJECT_NAME} 
  src/kinematics_group_visualization.cpp
  src/kinematics_start_goal_visualization.cpp 
  src/joint_trajectory_visualization.cpp 
  src/interactive_object_visualization.cpp 
  )
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
rosbuild_add_executable(kinematics_visualization_test src/kinematics_visualization_test.cpp)
target_link_libraries(kinematics_visualization_test ${PROJECT_NAME})

rosbuild_add_executable(kinematics_visualization_start_goal_test src/kinematics_visualization_start_goal_test.cpp)
target_link_libraries(kinematics_visualization_start_goal_test ${PROJECT_NAME})

rosbuild_add_executable(joint_trajectory_visualization_test src/joint_trajectory_visualization_test.cpp)
target_link_libraries(joint_trajectory_visualization_test ${PROJECT_NAME})

rosbuild_add_executable(interactive_object_visualization_test src/interactive_object_visualization_test.cpp)
target_link_libraries(interactive_object_visualization_test ${PROJECT_NAME})
